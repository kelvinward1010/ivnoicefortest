// This file is auto-generated by @hey-api/openapi-ts

export type AccountCreate = {
    account_name: string;
    address: string;
    postcode: string;
    phone_number: string;
    email: string;
    tax_code: string;
    company_code: string;
    description?: (string | null);
    representative: string;
    representative_email?: (string | null);
    representative_phone?: (string | null);
    account_manager_id: string;
    created_by_id: string;
    receive_invoice_email?: (string | null);
    pinned_at?: (string | null);
    account_manager_name?: (string | null);
    is_deleted?: boolean;
    created_at?: (string | null);
    updated_at?: (string | null);
};

export type AccountPublic = {
    account_name: string;
    address: string;
    postcode: string;
    phone_number: string;
    email: string;
    tax_code: string;
    company_code: string;
    description?: (string | null);
    representative: string;
    representative_email?: (string | null);
    representative_phone?: (string | null);
    account_manager_id: string;
    created_by_id: string;
    receive_invoice_email?: (string | null);
    pinned_at?: (string | null);
    account_manager_name?: (string | null);
    is_deleted?: boolean;
    created_at?: (string | null);
    updated_at?: (string | null);
    id: string;
};

export type AccountsPublic = {
    data: Array<AccountPublic>;
    count: number;
};

export type AccountUpdate = {
    account_name?: (string | null);
    address?: (string | null);
    postcode?: (string | null);
    phone_number?: (string | null);
    email?: (string | null);
    tax_code?: (string | null);
    company_code?: (string | null);
    description?: (string | null);
    representative?: (string | null);
    representative_email?: (string | null);
    representative_phone?: (string | null);
    account_manager_id?: (string | null);
    receive_invoice_email?: (string | null);
    pinned_at?: (string | null);
    is_deleted?: boolean;
    account_manager_name?: (string | null);
    created_at?: string;
    updated_at?: string;
};

export type Body_drivers_upload_file_to_folder = {
    file: (Blob | File);
};

export type CurrencyCodeEnum = 'JPY' | 'USD' | 'VND' | 'EUR';

export type DeleteReponse = {
    id: string;
    message: string;
};

export type DriveCreateSchema = {
    id: string;
    name?: (string | null);
    parent_id?: (string | null);
    folder_types?: (string | null);
    project_id?: (string | null);
    account_id?: (string | null);
    is_projects_folder?: (boolean | null);
    is_linked?: (boolean | null);
    linked_drive_id?: (string | null);
};

export type DrivesAllSchema = {
    folders: Array<DriveSchema>;
    files: Array<DriveSchema>;
};

export type DriveSchema = {
    id: string;
    name: string;
    mimeType?: (string | null);
    parents?: (Array<(string)> | null);
    thumbnailLink?: (string | null);
    webViewLink?: (string | null);
    webContentLink?: (string | null);
    exportLink?: (string | null);
};

export type EmployeePublic = {
    id: string;
    idtms?: (string | null);
    badgeNumber: string;
    avatarUrl?: (string | null);
    name: string;
    status: string;
    gender: string;
    birthDate?: (string | null);
    phone?: (string | null);
    email: string;
    address?: (string | null);
    identityNumber?: (string | null);
    issueDate?: (string | null);
    placeOfIssue?: (string | null);
    oldIdentityNumber?: (string | null);
    accomodation?: (string | null);
    siid?: (string | null);
    bankAccountNumber?: (string | null);
    university?: (string | null);
    graduationYear?: (number | null);
    degree?: (string | null);
    majors?: (string | null);
    technologies?: (string | null);
    certificates?: (string | null);
    maritalStatus?: (string | null);
    relatePhoneNumber?: (string | null);
    hobbies?: (string | null);
    licensePlate?: (string | null);
    hiredDate?: (string | null);
    managerId?: (string | null);
    biometricUrl?: (string | null);
    maxLeaveDay: number;
    firstLogin: boolean;
    createdAt: string;
    updatedAt: string;
    roles: Array<Role>;
};

export type EmployeesPublic = {
    data: Array<EmployeePublic>;
    count: number;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type InvoiceIssueScheduleCreate = {
    issue_date?: (string | null);
};

export type InvoiceIssueSchedulePublic = {
    issue_date?: (string | null);
    id: string;
};

export type InvoiceIssueSchedulesPublic = {
    data: Array<InvoiceIssueSchedulePublic>;
    count: number;
};

export type InvoiceIssueScheduleUpdate = {
    issue_date?: (string | null);
};

export type Message = {
    message: string;
};

export type ProjectCreate = {
    name: string;
    description?: (string | null);
    pm_id?: (string | null);
    rmo_id?: (string | null);
    pm_name?: (string | null);
    rmo_name?: (string | null);
    client_pm?: (string | null);
    client_po?: (string | null);
    start_date?: (string | null);
    end_date?: (string | null);
    project_size?: (number | null);
    project_budget?: (number | null);
    currency_code?: (CurrencyCodeEnum | null);
    working_hours?: (number | null);
    status?: ProjectStatusEnum;
    client_pm_phone_number?: (string | null);
    client_pm_email?: (string | null);
    client_po_phone_number?: (string | null);
    client_po_email?: (string | null);
    isPinned?: (boolean | null);
    account_id: string;
};

export type ProjectPublic = {
    name: string;
    description?: (string | null);
    pm_id?: (string | null);
    rmo_id?: (string | null);
    pm_name?: (string | null);
    rmo_name?: (string | null);
    client_pm?: (string | null);
    client_po?: (string | null);
    start_date?: (string | null);
    end_date?: (string | null);
    project_size?: (number | null);
    project_budget?: (number | null);
    currency_code?: (string | null);
    working_hours?: (number | null);
    status?: string;
    client_pm_phone_number?: (string | null);
    client_pm_email?: (string | null);
    client_po_phone_number?: (string | null);
    client_po_email?: (string | null);
    isPinned?: (boolean | null);
    id: string;
    account_name?: (string | null);
    account_id?: (string | null);
};

export type ProjectsAddNextInvoiceDate = {
    name: string;
    description?: (string | null);
    pm_id?: (string | null);
    rmo_id?: (string | null);
    pm_name?: (string | null);
    rmo_name?: (string | null);
    client_pm?: (string | null);
    client_po?: (string | null);
    start_date?: (string | null);
    end_date?: (string | null);
    project_size?: (number | null);
    project_budget?: (number | null);
    currency_code?: (string | null);
    working_hours?: (number | null);
    status?: string;
    client_pm_phone_number?: (string | null);
    client_pm_email?: (string | null);
    client_po_phone_number?: (string | null);
    client_po_email?: (string | null);
    isPinned?: (boolean | null);
    id: string;
    account_name?: (string | null);
    account_id?: (string | null);
    next_invoice_date?: (string | null);
};

export type ProjectsPublic = {
    data: Array<ProjectsAddNextInvoiceDate>;
    count: number;
};

export type ProjectStatusEnum = 'DRAFT' | 'BIDDING' | 'RUNNING' | 'DONE' | 'ON_HOLD' | 'CANCELLED';

export type ProjectUpdate = {
    name?: (string | null);
    description?: (string | null);
    pm_id?: (string | null);
    rmo_id?: (string | null);
    pm_name?: (string | null);
    rmo_name?: (string | null);
    client_pm?: (string | null);
    client_po?: (string | null);
    start_date?: (string | null);
    end_date?: (string | null);
    project_size?: (number | null);
    project_budget?: (number | null);
    currency_code?: (CurrencyCodeEnum | null);
    working_hours?: (number | null);
    status?: (ProjectStatusEnum | null);
    client_pm_phone_number?: (string | null);
    client_pm_email?: (string | null);
    client_po_phone_number?: (string | null);
    client_po_email?: (string | null);
    isPinned?: (boolean | null);
};

export type RenameRequest = {
    new_name: string;
};

export type Role = {
    role: string;
};

export type SOWCreate = {
    start_date?: string;
    end_date?: string;
    sow_document_id?: (string | null);
    currency_code?: string;
    description: (string | null);
    total_manday: number;
    total_amount: number;
    type?: string;
    onshore?: boolean;
    next_invoice_date: string;
    is_chargeable?: boolean;
};

export type SOWPublic = {
    start_date?: string;
    end_date?: string;
    sow_document_id?: (string | null);
    currency_code?: string;
    description: (string | null);
    total_manday: number;
    total_amount: number;
    type?: string;
    onshore?: boolean;
    next_invoice_date: string;
    is_chargeable?: boolean;
    id: string;
};

export type SOWPublics = {
    data: Array<SOWPublic>;
    count: number;
};

export type SOWUpdate = {
    start_date?: (string | null);
    end_date?: (string | null);
    sow_document_id?: (string | null);
    currency_code?: (string | null);
    description?: (string | null);
    total_manday?: (number | null);
    total_amount?: (number | null);
    type?: (string | null);
    onshore?: (boolean | null);
};

export type UploadFileSchema = {
    id: string;
    name: string;
    mimeType: (string | null);
    thumbnailLink: (string | null);
    folder_id: string;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type AccountsGetAccountsData = {
    pageIndex?: number;
    pageSize?: number;
    search?: (string | null);
    sortBy?: (string | null);
    sortOrder?: (string | null);
};

export type AccountsGetAccountsResponse = (AccountsPublic);

export type AccountsCreateAccountData = {
    requestBody: AccountCreate;
};

export type AccountsCreateAccountResponse = (AccountPublic);

export type AccountsGetAccountByIdData = {
    id: string;
};

export type AccountsGetAccountByIdResponse = (AccountPublic);

export type AccountsUpdateAccountData = {
    id: string;
    requestBody: AccountUpdate;
};

export type AccountsUpdateAccountResponse = (AccountPublic);

export type AccountsDeleteAccountData = {
    id: string;
};

export type AccountsDeleteAccountResponse = (DeleteReponse);

export type AccountsMarkAccountAsImportantData = {
    accountId: string;
    pin: boolean;
};

export type AccountsMarkAccountAsImportantResponse = (AccountPublic);

export type DriversListDriveFilesResponse = (unknown);

export type DriversGetFolderContentsData = {
    folderId: string;
};

export type DriversGetFolderContentsResponse = (DrivesAllSchema);

export type DriversGetProjectFolderData = {
    projectId: string;
};

export type DriversGetProjectFolderResponse = ({
    [key: string]: unknown;
});

export type DriversGetFolderFilteredData = {
    accountId?: (string | null);
    folderTypes?: Array<(string)>;
    projectId?: (string | null);
};

export type DriversGetFolderFilteredResponse = ({
    [key: string]: unknown;
});

export type DriversCreateFolderInParentData = {
    accountId?: (string | null);
    folderTypes?: (string | null);
    name: string;
    parentId: string;
    projectId?: (string | null);
};

export type DriversCreateFolderInParentResponse = (DriveCreateSchema);

export type DriversCreateAccountFolderData = {
    accountId: string;
    accountName: string;
};

export type DriversCreateAccountFolderResponse = ({
    [key: string]: unknown;
});

export type DriversCreateProjectFolderData = {
    accountId?: (string | null);
    name: string;
    projectId?: (string | null);
};

export type DriversCreateProjectFolderResponse = ({
    [key: string]: unknown;
});

export type DriversUploadFileToFolderData = {
    folderTypes?: (string | null);
    formData: Body_drivers_upload_file_to_folder;
    parentId: string;
    projectId?: (string | null);
};

export type DriversUploadFileToFolderResponse = (UploadFileSchema);

export type DriversUpdateDriveFileData = {
    fileId: string;
    requestBody: RenameRequest;
};

export type DriversUpdateDriveFileResponse = (unknown);

export type DriversDeleteDriveFileData = {
    fileId: string;
};

export type DriversDeleteDriveFileResponse = (unknown);

export type EmployeesGetEmployeeData = {
    id: string;
};

export type EmployeesGetEmployeeResponse = (EmployeePublic);

export type EmployeesGetAllEmployeesData = {
    roleName?: (string | null);
    search?: (string | null);
};

export type EmployeesGetAllEmployeesResponse = (EmployeesPublic);

export type ProjectsCreateProjectData = {
    requestBody: ProjectCreate;
};

export type ProjectsCreateProjectResponse = (ProjectPublic);

export type ProjectsGetProjectsData = {
    endDate?: (string | null);
    pageIndex?: number;
    pageSize?: number;
    search?: (string | null);
    sortBy?: (string | null);
    sortOrder?: (string | null);
    startDate?: (string | null);
    status?: (string | null);
};

export type ProjectsGetProjectsResponse = (ProjectsPublic);

export type ProjectsUpdateProjectData = {
    projectId: string;
    requestBody: ProjectUpdate;
};

export type ProjectsUpdateProjectResponse = (ProjectPublic);

export type ProjectsGetProjectByIdData = {
    projectId: string;
};

export type ProjectsGetProjectByIdResponse = (ProjectPublic);

export type ProjectsDeleteProjectByIdData = {
    projectId: string;
};

export type ProjectsDeleteProjectByIdResponse = (Message);

export type ProjectsPinMarkData = {
    isPinned: boolean;
    projectId: string;
};

export type ProjectsPinMarkResponse = (ProjectPublic);

export type ProjectSowsGetSowData = {
    projectId: string;
    sowId: string;
};

export type ProjectSowsGetSowResponse = (SOWPublic);

export type ProjectSowsUpdateSowData = {
    projectId: string;
    requestBody: SOWUpdate;
    sowId: string;
};

export type ProjectSowsUpdateSowResponse = (SOWPublic);

export type ProjectSowsDeleteSowData = {
    projectId: string;
    sowId: string;
};

export type ProjectSowsDeleteSowResponse = (Message);

export type ProjectSowsGetAllSowsData = {
    pageIndex?: number;
    pageSize?: number;
    projectId: string;
    search?: (string | null);
    sortBy?: (string | null);
    sortOrder?: (string | null);
};

export type ProjectSowsGetAllSowsResponse = (SOWPublics);

export type ProjectSowsCreateSowData = {
    projectId: string;
    requestBody: SOWCreate;
};

export type ProjectSowsCreateSowResponse = (SOWPublic);

export type ProjectSowsDeleteAllSowsData = {
    projectId: string;
};

export type ProjectSowsDeleteAllSowsResponse = (Message);

export type SowsInvoiceIssueSchedulesGetInvoiceIssueScheduleData = {
    iisId: string;
    sowId: string;
};

export type SowsInvoiceIssueSchedulesGetInvoiceIssueScheduleResponse = (InvoiceIssueSchedulePublic);

export type SowsInvoiceIssueSchedulesUpdateInvoiceIssueScheduleData = {
    iisId: string;
    requestBody: InvoiceIssueScheduleUpdate;
    sowId: string;
};

export type SowsInvoiceIssueSchedulesUpdateInvoiceIssueScheduleResponse = (InvoiceIssueSchedulePublic);

export type SowsInvoiceIssueSchedulesDeleteInvoiceIssueScheduleData = {
    iisId: string;
    sowId: string;
};

export type SowsInvoiceIssueSchedulesDeleteInvoiceIssueScheduleResponse = (Message);

export type SowsInvoiceIssueSchedulesGetAllInvoiceIssueSchedulesData = {
    pageIndex?: number;
    pageSize?: number;
    search?: (string | null);
    sortBy?: (string | null);
    sortOrder?: (string | null);
    sowId: string;
};

export type SowsInvoiceIssueSchedulesGetAllInvoiceIssueSchedulesResponse = (InvoiceIssueSchedulesPublic);

export type SowsInvoiceIssueSchedulesCreateInvoiceIssueScheduleData = {
    requestBody: InvoiceIssueScheduleCreate;
    sowId: string;
};

export type SowsInvoiceIssueSchedulesCreateInvoiceIssueScheduleResponse = (InvoiceIssueSchedulePublic);

export type SowsInvoiceIssueSchedulesDeleteAllPaymentScheduleData = {
    sowId: string;
};

export type SowsInvoiceIssueSchedulesDeleteAllPaymentScheduleResponse = (Message);

export type UtilsTestEmailData = {
    emailTo: string;
};

export type UtilsTestEmailResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);

export type UtilsTestData = {
    message: string;
};

export type UtilsTestResponse = ({
    [key: string]: unknown;
});